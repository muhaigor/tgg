#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–æ—Ç–∞
"""

import requests
import json
import time
import os
from datetime import datetime

class ExternalServiceSetup:
    def __init__(self, repl_url):
        self.repl_url = repl_url
        self.services = {}
        
    def setup_uptimerobot(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ UptimeRobot (—Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á)"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UptimeRobot...")
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        instructions = f"""
        üìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê UPTIMEROBOT:
        
        1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://uptimerobot.com
        2. –°–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        3. –ù–∞–∂–º–∏—Ç–µ "Add New Monitor"
        4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ:
           - Friendly Name: German Words Bot
           - URL: {self.repl_url}/ping
           - Monitor Type: HTTP(s)
           - Monitoring Interval: 5 minutes
        5. –ù–∞–∂–º–∏—Ç–µ "Create Monitor"
        
        ‚úÖ –ì–æ—Ç–æ–≤–æ! UptimeRobot –±—É–¥–µ—Ç –ø–∏–Ω–≥–æ–≤–∞—Ç—å –≤–∞—à –±–æ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        """
        print(instructions)
        
    def setup_statuscake(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ StatusCake (—Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á)"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ StatusCake...")
        
        instructions = f"""
        üìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê STATUSCAKE:
        
        1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://statuscake.com
        2. –°–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        3. –ù–∞–∂–º–∏—Ç–µ "Add New Test"
        4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ:
           - Website Name: German Words Bot
           - Website URL: {self.repl_url}/health
           - Check Rate: 5 minutes
           - Test Type: HTTP
        5. –ù–∞–∂–º–∏—Ç–µ "Create Test"
        
        ‚úÖ –ì–æ—Ç–æ–≤–æ! StatusCake –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤–∞—à –±–æ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        """
        print(instructions)
        
    def setup_cron_job(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cron-job.org"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cron-job.org...")
        
        instructions = f"""
        üìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê CRON-JOB.ORG:
        
        1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://cron-job.org
        2. –°–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
        3. –ù–∞–∂–º–∏—Ç–µ "Create Cronjob"
        4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ:
           - Title: German Words Bot Ping
           - Address: {self.repl_url}/ping
           - Schedule: */5 * * * * (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
           - Timezone: Your timezone
        5. –ù–∞–∂–º–∏—Ç–µ "Create"
        
        ‚úÖ –ì–æ—Ç–æ–≤–æ! Cron-job –±—É–¥–µ—Ç –ø–∏–Ω–≥–æ–≤–∞—Ç—å –≤–∞—à –±–æ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        """
        print(instructions)
        
    def setup_pingdom(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Pingdom"""
        print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Pingdom...")
        
        instructions = f"""
        üìã –†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê PINGDOM:
        
        1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://pingdom.com
        2. –°–æ–∑–¥–∞–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç (14-–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–∏–∞–ª)
        3. –ù–∞–∂–º–∏—Ç–µ "Add Check"
        4. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ:
           - Check Name: German Words Bot
           - URL: {self.repl_url}/ping
           - Check Interval: 5 minutes
        5. –ù–∞–∂–º–∏—Ç–µ "Add Check"
        
        ‚úÖ –ì–æ—Ç–æ–≤–æ! Pingdom –±—É–¥–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –≤–∞—à –±–æ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        """
        print(instructions)
        
    def test_endpoints(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
        
        endpoints = [
            f"{self.repl_url}/",
            f"{self.repl_url}/ping",
            f"{self.repl_url}/health",
            f"{self.repl_url}/stats"
        ]
        
        for endpoint in endpoints:
            try:
                response = requests.get(endpoint, timeout=10)
                if response.status_code == 200:
                    print(f"‚úÖ {endpoint} - OK ({response.status_code})")
                else:
                    print(f"‚ö†Ô∏è {endpoint} - {response.status_code}")
            except Exception as e:
                print(f"‚ùå {endpoint} - Error: {e}")
                
    def create_monitoring_script(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        script_content = f'''#!/usr/bin/env python3
"""
–õ–æ–∫–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ—Ç–∞
"""

import requests
import time
import json
from datetime import datetime

def monitor_bot():
    url = "{self.repl_url}"
    endpoints = ["/", "/ping", "/health", "/stats"]
    
    while True:
        print(f"\\nüîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ {datetime.now().strftime('%H:%M:%S')}")
        
        for endpoint in endpoints:
            try:
                response = requests.get(url + endpoint, timeout=5)
                if response.status_code == 200:
                    print(f"‚úÖ {{endpoint}} - OK")
                else:
                    print(f"‚ö†Ô∏è {{endpoint}} - {{response.status_code}}")
            except Exception as e:
                print(f"‚ùå {{endpoint}} - Error: {{e}}")
        
        time.sleep(300)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    monitor_bot()
'''
        
        with open('local_monitor.py', 'w', encoding='utf-8') as f:
            f.write(script_content)
        
        print("üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª local_monitor.py –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        
    def run_setup(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê –í–ù–ï–®–ù–ò–• –°–ï–†–í–ò–°–û–í –î–õ–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ë–û–¢–ê")
        print("=" * 60)
        print(f"üåê URL –≤–∞—à–µ–≥–æ –±–æ—Ç–∞: {self.repl_url}")
        print("=" * 60)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
        self.test_endpoints()
        print()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
        self.setup_uptimerobot()
        print()
        self.setup_statuscake()
        print()
        self.setup_cron_job()
        print()
        self.setup_pingdom()
        print()
        
        # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        self.create_monitoring_script()
        
        print("üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 60)
        print("üìã –ß–¢–û –î–ï–õ–ê–¢–¨ –î–ê–õ–¨–®–ï:")
        print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ local_monitor.py –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        print("3. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ https://your-repl-url.repl.co/stats")
        print("4. –í–∞—à –±–æ—Ç —Ç–µ–ø–µ—Ä—å –∑–∞—â–∏—â–µ–Ω –æ—Ç —Å–Ω–∞! üõ°Ô∏è")

def main():
    # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    repl_url = os.environ.get('REPLIT_URL', '')
    
    if not repl_url:
        print("üåê –í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Replit –ø—Ä–æ–µ–∫—Ç–∞:")
        print("–ü—Ä–∏–º–µ—Ä: https://your-project-name.repl.co")
        repl_url = input("URL: ").strip()
        
        if not repl_url.startswith('http'):
            repl_url = f"https://{repl_url}"
            
        if not repl_url.endswith('.repl.co'):
            repl_url = f"{repl_url}.repl.co"
    
    setup = ExternalServiceSetup(repl_url)
    setup.run_setup()

if __name__ == "__main__":
    main()
